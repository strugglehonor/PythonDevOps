# Generated by Django 2.0.5 on 2020-06-09 07:55

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_create_time', models.DateTimeField(auto_created=True, verbose_name='资产入库时间')),
                ('asset_flag', models.CharField(max_length=10, unique=True, verbose_name='资产编号')),
                ('asset_manage_name', models.CharField(max_length=10, verbose_name='资产管理员')),
                ('asset_manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理ip')),
                ('asset_type', models.CharField(choices=[('server', '服务器'), ('security', '安全设备'), ('network', '网络设备')], default='server', max_length=10, verbose_name='资产类型')),
                ('asset_status', models.SmallIntegerField(choices=[(0, '未使用'), (1, '已上线'), (2, '已下线'), (3, '已故障')], default=1, verbose_name='资产状态')),
                ('asset_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='资产型号')),
                ('asset_purchase_time', models.DateField(blank=True, null=True, verbose_name='资产的购买日期')),
                ('asset_expire_time', models.DateField(blank=True, null=True, verbose_name='资产的过保日期')),
                ('asset_update_time', models.DateTimeField(auto_now_add=True, verbose_name='资产更新时间')),
                ('asset_city', models.CharField(max_length=10, verbose_name='资产所在城市')),
                ('asset_note', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '资产总表',
                'verbose_name_plural': '资产总表',
                'db_table': 'ops_assets',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='业务线名称')),
                ('business_manager', models.CharField(max_length=20, verbose_name='业务线的负责人')),
                ('asset', models.ManyToManyField(related_name='business', to='assets.Assets')),
            ],
            options={
                'verbose_name': '业务线表',
                'verbose_name_plural': '业务线表',
                'db_table': 'business',
            },
        ),
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinet_number', models.CharField(max_length=10, unique=True, verbose_name='机柜编号')),
                ('cabinet_floor', models.SmallIntegerField(blank=True, null=True, verbose_name='机柜所在楼层')),
                ('cabinet_note', models.CharField(blank=True, max_length=100, null=True, verbose_name='机柜备注')),
            ],
            options={
                'verbose_name': '机柜表',
                'verbose_name_plural': '机柜表',
                'db_table': 'ops_cabinet',
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_volume', models.CharField(max_length=20, verbose_name='磁盘容量')),
                ('disk_model', models.CharField(max_length=40, verbose_name='磁盘型号')),
                ('disk_slot', models.CharField(max_length=8, verbose_name='磁盘插槽')),
                ('disk_type', models.CharField(max_length=8, verbose_name='磁盘接口类型')),
            ],
            options={
                'verbose_name': '硬盘表',
                'verbose_name_plural': '硬盘表',
                'db_table': 'ops_disk',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idc_address', models.CharField(max_length=50, verbose_name='机房地址')),
                ('idc_name', models.CharField(max_length=10, unique=True, verbose_name='机房名称')),
                ('idc_manager', models.CharField(max_length=10, verbose_name='机房的负责人')),
                ('idc_telephone', models.CharField(max_length=11, verbose_name='负责人的电话')),
                ('idc_note', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机房表',
                'verbose_name_plural': '机房表',
                'db_table': 'ops_idc',
            },
        ),
        migrations.CreateModel(
            name='Mainboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mainboard_sn', models.CharField(max_length=100, verbose_name='主板序列号')),
                ('mainboard_manufacturer', models.CharField(max_length=100, verbose_name='主板厂商')),
                ('mainboard_model', models.CharField(max_length=100, verbose_name='主板型号')),
            ],
            options={
                'verbose_name': '主板信息表',
                'verbose_name_plural': '主板信息表',
                'db_table': 'ops_mainboard',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='厂商名字')),
                ('phone', models.CharField(max_length=11, verbose_name='厂商联系电话')),
            ],
            options={
                'verbose_name': '厂商表',
                'verbose_name_plural': '厂商表',
                'db_table': 'ops_manufacturer',
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_slot', models.CharField(max_length=10, verbose_name='内存插槽')),
                ('memory_serial', models.CharField(max_length=100, verbose_name='内存序列号')),
                ('memory_volume', models.CharField(max_length=8, verbose_name='内存total容量')),
                ('memory_free', models.CharField(max_length=8, verbose_name='内存剩余量')),
                ('memory_used', models.CharField(max_length=8, verbose_name='内存已使用量')),
                ('memory_shared', models.CharField(max_length=8, verbose_name='内存shared')),
                ('memory_available', models.CharField(max_length=8, verbose_name='可用内存')),
                ('bufferAndCache', models.CharField(max_length=8, verbose_name='buffer/cache')),
            ],
            options={
                'verbose_name': '内存表',
                'verbose_name_plural': '内存表',
                'db_table': 'ops_memory',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_type', models.SmallIntegerField(choices=[(0, 'wifi'), (1, 'vpn'), (2, '路由器'), (3, '交换机'), (4, '其他')], verbose_name='网络设备类型')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network_device', to='assets.Assets')),
            ],
            options={
                'verbose_name': '网络设备表',
                'verbose_name_plural': '网络设备表',
                'db_table': 'network_device',
            },
        ),
        migrations.CreateModel(
            name='NetworkCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_card_status', models.IntegerField(choices=[(0, '关闭'), (1, '开启'), (2, '故障')], default=1, verbose_name='网卡状态')),
                ('network_card_name', models.CharField(max_length=10, verbose_name='网卡名称')),
                ('network_card_ip', models.GenericIPAddressField(verbose_name='ip地址')),
                ('network_card_gateway', models.GenericIPAddressField(verbose_name='网关地址')),
                ('network_card_netmask', models.GenericIPAddressField(verbose_name='子网掩码')),
                ('network_card_dns', models.GenericIPAddressField(verbose_name='DNS')),
                ('network_card_mac', models.CharField(max_length=30, verbose_name='mac地址')),
            ],
            options={
                'verbose_name': '网卡表',
                'verbose_name_plural': '网卡表',
                'db_table': 'ops_network_card',
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('security_type', models.SmallIntegerField(verbose_name='安全设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='security', to='assets.Assets')),
            ],
            options={
                'verbose_name': '安全设备表',
                'verbose_name_plural': '安全设备表',
                'db_table': 'ops_security',
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.SmallIntegerField(verbose_name='服务器类型')),
                ('username', models.CharField(max_length=100, verbose_name='管理用户')),
                ('password', models.CharField(max_length=100, verbose_name='密码')),
                ('port', models.DecimalField(blank=True, decimal_places=0, default=22, max_digits=6, null=True, verbose_name='ssh端口')),
                ('kernel', models.CharField(max_length=30, verbose_name='内核版本')),
                ('system', models.CharField(max_length=30, verbose_name='系统版本')),
                ('cpu_model', models.CharField(max_length=40, verbose_name='CPU型号')),
                ('cpu_counts', models.SmallIntegerField(verbose_name='物理CPU个数')),
                ('vcpu_counts', models.SmallIntegerField(verbose_name='逻辑CPU个数')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='server', to='assets.Assets')),
                ('host_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.fields.NOT_PROVIDED, related_name='host_on_server', to='assets.Servers', verbose_name='宿主机')),
            ],
            options={
                'verbose_name': '服务器表',
                'verbose_name_plural': '服务器表',
                'db_table': 'ops_server',
            },
        ),
        migrations.CreateModel(
            name='UserGroupProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=10, verbose_name='组名')),
            ],
            options={
                'verbose_name': '用户组表',
                'verbose_name_plural': '用户组表',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='管理员名字')),
                ('password', models.CharField(max_length=64, verbose_name='登录密码')),
                ('user_type', models.SmallIntegerField(choices=[(0, '普通管理员'), (1, '超级管理员')], verbose_name='用户类型')),
                ('phone', models.CharField(max_length=11, verbose_name='联系电话')),
                ('business', models.ManyToManyField(to='assets.Business', verbose_name='业务线')),
                ('group', models.ManyToManyField(to='assets.UserGroupProfile', verbose_name='所属组')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
            },
        ),
        migrations.AddField(
            model_name='networkcard',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networkCard', to='assets.Servers'),
        ),
        migrations.AddField(
            model_name='network',
            name='network_card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network_device', to='assets.NetworkCard'),
        ),
        migrations.AddField(
            model_name='memory',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memory', to='assets.Servers', verbose_name='所在的服务器'),
        ),
        migrations.AddField(
            model_name='mainboard',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainboard', to='assets.Servers', verbose_name='所在的服务器'),
        ),
        migrations.AddField(
            model_name='disk',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disk', to='assets.Servers', verbose_name='所在服务器'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.IDC', verbose_name='idc机房'),
        ),
        migrations.AddField(
            model_name='assets',
            name='asset_cabinet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.Cabinet', verbose_name='资产所在机柜'),
        ),
        migrations.AddField(
            model_name='assets',
            name='asset_idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.IDC', verbose_name='资产所在机房'),
        ),
        migrations.AddField(
            model_name='assets',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Manufacturer', verbose_name='厂商'),
        ),
    ]
